{"version":3,"file":"index.mjs","sources":["../src/index.js"],"sourcesContent":["import Konva from \"konva\";\n\nexport default class StreamChart {\n  viewDuration = 5000\n  values = []\n  options = {\n    limit: 'auto'\n  }\n  limits = [0,1]\n\n  constructor(divref, options = {}) {\n\n    this.options = {\n      ...this.options,\n      options\n    }\n    // first we need to create a stage\n    var stage = this.stage = new Konva.Stage({\n      container: divref, // id of container <div>\n      width: divref.offsetWidth,\n      height: 100\n    });\n\n    var layer = this.layer = new Konva.Layer();\n\n    // create our shape\n    \n    this.line = new Konva.Line({\n      x: 0,\n      y: 0,\n      points: [],\n      stroke: 'red',\n    });\n    \n    // add the shape to the layer\n    layer.add(this.line);\n\n    // add the layer to the stage\n    stage.add(layer);\n\n    // draw the image\n    layer.draw();\n\n    this.textLayer = new Konva.Layer();\n\n    this.limTop = new Konva.Text({\n      x: stage.width()/2,\n      y: 0,\n      text: \"1.00\",\n      points: [],\n      fontSize: 14,\n      fontFamily: 'Roboto',\n      fill: 'gray'\n    });\n\n    this.limBot = new Konva.Text({\n      x: stage.width()/2,\n      y: stage.height() - 14,\n      text: \"0.00\",\n      points: [],\n      fontSize: 14,\n      fontFamily: 'Roboto',\n      fill: 'gray'\n    });\n    this.textLayer.add(this.limTop);\n    this.textLayer.add(this.limBot);\n    stage.add(this.textLayer);\n\n    requestAnimationFrame(this.loop)\n\n  }\n\n  loop = () => {\n    \n    const points = []\n    const now = performance.now()\n    this.values.forEach((v ,i)=> {\n      const timesince = now - v.time\n      const timeprogress = 1 - (timesince / this.viewDuration)\n      if (i != 0) {\n        points.push(timeprogress * this.stage.width())\n        points.push(this.lastValue)\n      }\n      points.push(timeprogress * this.stage.width())\n      const heightProgress = (v.value - this.limits[0]) / this.limits[1]\n      this.lastValue = this.stage.height() - (heightProgress * this.stage.height())\n      points.push(this.lastValue)\n    })\n\n    points.push(this.stage.width())\n    points.push(this.lastValue)\n    \n    this.line.setPoints(points)\n\n    this.layer.draw();\n    requestAnimationFrame(this.loop)\n  }\n\n  addValue = (value) => {\n    const time = performance.now()\n\n    this.values.push({ time, value })\n    this.values = this.values.filter(v => time - v.time < this.viewDuration + 1000)\n    if (this.options.limit == 'auto') {\n      const max = Math.max(...this.values.map(v => v.value))\n      const min = Math.min(...this.values.map(v => v.value))\n      this.limits = [min, max]\n    }\n    this.limTop.setText(this.limits[1].toFixed(2))\n    this.limBot.setText(this.limits[0].toFixed(2))\n    this.textLayer.draw()\n  }\n}\n"],"names":["constructor","divref","options","viewDuration","values","limits","loop","points","now","performance","forEach","v","i","timeprogress","time","this","push","stage","width","lastValue","heightProgress","value","height","line","setPoints","layer","draw","requestAnimationFrame","addValue","filter","limit","max","Math","map","min","limTop","setText","toFixed","limBot","textLayer","Object","Konva","Stage","offsetWidth","Layer","Line","add","Text","x","y"],"mappings":"oCAUEA,SAAYC,EAAQC,6BAAU,SAP9BC,aAAe,SACfC,OAAS,QACTF,QAAU,OACD,aAETG,OAAS,CAAC,EAAE,QAgEZC,oBAEQC,EAAS,GACTC,EAAMC,YAAYD,QACnBJ,OAAOM,iBAASC,EAAGC,OAEhBC,EAAe,GADHL,EAAMG,EAAEG,MACYC,EAAKZ,aAClC,GAALS,IACFL,EAAOS,KAAKH,EAAeE,EAAKE,MAAMC,WAC/BF,KAAKD,EAAKI,YAEnBZ,EAAOS,KAAKH,EAAeE,EAAKE,MAAMC,aAChCE,GAAkBT,EAAEU,MAAQN,EAAKV,OAAO,IAAMU,EAAKV,OAAO,KAC3Dc,UAAYJ,EAAKE,MAAMK,SAAYF,EAAiBL,EAAKE,MAAMK,WAC7DN,KAAKD,EAAKI,eAGZH,KAAKD,EAAKE,MAAMC,WAChBF,KAAKD,EAAKI,aAEZI,KAAKC,UAAUjB,KAEfkB,MAAMC,OACXC,sBAAsBZ,EAAKT,YAG7BsB,kBAAYP,OACJP,EAAOL,YAAYD,WAEpBJ,OAAOY,KAAK,MAAEF,QAAMO,MACpBjB,OAASW,EAAKX,OAAOyB,gBAAOlB,UAAKG,EAAOH,EAAEG,KAAOC,EAAKZ,aAAe,MAChD,QAAtBY,EAAKb,QAAQ4B,MAAiB,KAC1BC,EAAMC,KAAKD,UAAIC,KAAGjB,EAAKX,OAAO6B,aAAItB,UAAKA,EAAEU,SACzCa,EAAMF,KAAKE,UAAIF,KAAGjB,EAAKX,OAAO6B,aAAItB,UAAKA,EAAEU,WAC1ChB,OAAS,CAAC6B,EAAKH,KAEjBI,OAAOC,QAAQrB,EAAKV,OAAO,GAAGgC,QAAQ,MACtCC,OAAOF,QAAQrB,EAAKV,OAAO,GAAGgC,QAAQ,MACtCE,UAAUb,aAlGVxB,QAAUsC,iBACVzB,KAAKb,iBACRA,QAGEe,EAAQF,KAAKE,MAAQ,IAAIwB,EAAMC,MAAM,WAC5BzC,EACXiB,MAAOjB,EAAO0C,mBACN,MAGNlB,EAAQV,KAAKU,MAAQ,IAAIgB,EAAMG,WAI9BrB,KAAO,IAAIkB,EAAMI,KAAK,GACtB,IACA,SACK,UACA,UAIJC,IAAI/B,KAAKQ,MAGfN,EAAM6B,IAAIrB,GAGVA,EAAMC,YAEDa,UAAY,IAAIE,EAAMG,WAEtBT,OAAS,IAAIM,EAAMM,KAAK,CAC3BC,EAAG/B,EAAMC,QAAQ,IACd,OACG,cACE,YACE,cACE,cACN,cAGHoB,OAAS,IAAIG,EAAMM,KAAK,CAC3BC,EAAG/B,EAAMC,QAAQ,EACjB+B,EAAGhC,EAAMK,SAAW,QACd,cACE,YACE,cACE,cACN,cAEHiB,UAAUO,IAAI/B,KAAKoB,aACnBI,UAAUO,IAAI/B,KAAKuB,UAClBQ,IAAI/B,KAAKwB,WAEfZ,sBAAsBZ,KAAKT"}